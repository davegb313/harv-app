{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/harvester-app/front-side/src/components/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport { FirstPageIcon, KeyboardArrowLeft, KeyboardArrowRight, LastPage } from '@mui/icons-material';\nimport { TableContainer, Table, TableHead, TableRow, TableBody, TableCell, TableFooter, TablePagination } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TablePaginationActions = props => {\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 70\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(LastPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nconst CustomTable = props => {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Asset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"IP Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"smth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            colSpan: 3,\n            rowsPerPage: 10,\n            page: page,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            },\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage,\n            ActionsComponent: TablePaginationActions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c2 = CustomTable;\nexport default CustomTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CustomTable\");","map":{"version":3,"sources":["/Users/davegb313/code/harvester-app/front-side/src/components/table.js"],"names":["React","useState","PropTypes","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPage","TableContainer","Table","TableHead","TableRow","TableBody","TableCell","TableFooter","TablePagination","TablePaginationActions","props","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","theme","direction","propTypes","number","isRequired","func","CustomTable","setPage","setRowsPerPage","emptyRows","rows","length","handleChangePage","newPage","inputProps","native","handleChangeRowsPerPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,kBAA3C,EAA+DC,QAA/D,QAA+E,qBAA/E;AACA,SACIC,cADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,QAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,WAPJ,EAQIC,eARJ,QASO,eATP;;;AAWA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACtC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAA6CJ,KAAnD;;AAEA,QAAMK,0BAA0B,GAAIC,KAAD,IAAW;AAC1CF,IAAAA,YAAY,CAACE,KAAD,EAAQ,CAAR,CAAZ;AACH,GAFD;;AAIA,QAAMC,qBAAqB,GAAID,KAAD,IAAW;AACrCF,IAAAA,YAAY,CAACE,KAAD,EAAQJ,IAAI,GAAG,CAAf,CAAZ;AACH,GAFD;;AAIA,QAAMM,qBAAqB,GAAIF,KAAD,IAAW;AACrCF,IAAAA,YAAY,CAACE,KAAD,EAAQJ,IAAI,GAAG,CAAf,CAAZ;AACH,GAFD;;AAIA,QAAMO,yBAAyB,GAAIH,KAAD,IAAW;AACzCF,IAAAA,YAAY,CAACE,KAAD,EAAQI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAA7C,CAAR,CAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEU,MAAAA,UAAU,EAAE,CAAd;AAAiBC,MAAAA,EAAE,EAAE;AAArB,KAAT;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,OAAO,EAAET,0BADb;AAEI,MAAA,QAAQ,EAAEH,IAAI,KAAK,CAFvB;AAGI,oBAAW,YAHf;AAAA,gBAKKa,KAAK,CAACC,SAAN,KAAoB,KAApB,gBAA4B,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAA2C,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,UAAD;AACI,MAAA,OAAO,EAAET,qBADb;AAEI,MAAA,QAAQ,EAAEL,IAAI,KAAK,CAFvB;AAGI,oBAAW,eAHf;AAAA,gBAKKa,KAAK,CAACC,SAAN,KAAoB,KAApB,gBAA4B,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAAqD,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAL1D;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI,QAAC,UAAD;AACI,MAAA,OAAO,EAAER,qBADb;AAEI,MAAA,QAAQ,EAAEN,IAAI,IAAIQ,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAFvD;AAGI,oBAAW,WAHf;AAAA,gBAKKY,KAAK,CAACC,SAAN,KAAoB,KAApB,gBAA4B,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAAoD,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AALzD;AAAA;AAAA;AAAA;AAAA,YAfJ,eAsBI,QAAC,UAAD;AACI,MAAA,OAAO,EAAEP,yBADb;AAEI,MAAA,QAAQ,EAAEP,IAAI,IAAIQ,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAFvD;AAGI,oBAAW,WAHf;AAAA,gBAKKY,KAAK,CAACC,SAAN,KAAoB,KAApB,gBAA4B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAAgD,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALrD;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAnDD;;KAAMjB,sB;AAqDNA,sBAAsB,CAACkB,SAAvB,GAAmC;AAC/BhB,EAAAA,KAAK,EAAEhB,SAAS,CAACiC,MAAV,CAAiBC,UADO;AAE/Bf,EAAAA,YAAY,EAAEnB,SAAS,CAACmC,IAAV,CAAeD,UAFE;AAG/BjB,EAAAA,IAAI,EAAEjB,SAAS,CAACiC,MAAV,CAAiBC,UAHQ;AAI/BhB,EAAAA,WAAW,EAAElB,SAAS,CAACiC,MAAV,CAAiBC;AAJC,CAAnC;;AAQA,MAAME,WAAW,GAAGrB,KAAK,IAAI;AAAA;;AACzB,QAAM,CAACE,IAAD,EAAOoB,OAAP,IAAkBtC,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACmB,WAAD,EAAcoB,cAAd,IAAgCvC,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMwC,SAAS,GACXtB,IAAI,GAAG,CAAP,GAAWQ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,IAAIT,IAAL,IAAaC,WAAb,GAA2BsB,IAAI,CAACC,MAA5C,CAAX,GAAiE,CADrE;;AAGA,QAAMC,gBAAgB,GAAG,CAACrB,KAAD,EAAQsB,OAAR,KAAoB;AACzCN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,cAAD;AAAA,2BACI,QAAC,KAAD;AAAO,oBAAW,cAAlB;AAAA,8BACI,QAAC,SAAD;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,SAAD;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI,QAAC,WAAD;AAAA,+BACI,QAAC,QAAD;AAAA,iCACI,QAAC,eAAD;AACI,YAAA,OAAO,EAAE,CADb;AAEI,YAAA,WAAW,EAAE,EAFjB;AAGI,YAAA,IAAI,EAAE1B,IAHV;AAII,YAAA,WAAW,EAAE;AACT2B,cAAAA,UAAU,EAAE;AACR,8BAAc;AADN,eADH;AAITC,cAAAA,MAAM,EAAE;AAJC,aAJjB;AAUI,YAAA,YAAY,EAAEH,gBAVlB;AAWI,YAAA,mBAAmB,EAAEI,uBAXzB;AAYI,YAAA,gBAAgB,EAAEhC;AAZtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA/CD;;GAAMsB,W;;MAAAA,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport { FirstPageIcon, KeyboardArrowLeft, KeyboardArrowRight, LastPage } from '@mui/icons-material';\nimport {\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableBody,\n    TableCell,\n    TableFooter,\n    TablePagination\n} from \"@mui/material\";\n\nconst TablePaginationActions = (props) => {\n    const { count, page, rowsPerPage, onPageChange } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onPageChange(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onPageChange(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onPageChange(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPage /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPage />}\n            </IconButton>\n        </Box>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nconst CustomTable = props => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    return (\n        <TableContainer>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Asset</TableCell>\n                        <TableCell>IP Address</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>name</TableCell>\n                        <TableCell>smth</TableCell>\n                    </TableRow>\n                </TableBody>\n                <TableFooter>\n                    <TableRow>\n                        <TablePagination\n                            colSpan={3}\n                            rowsPerPage={10}\n                            page={page}\n                            SelectProps={{\n                                inputProps: {\n                                    'aria-label': 'rows per page',\n                                },\n                                native: true,\n                            }}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableFooter>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default CustomTable;"]},"metadata":{},"sourceType":"module"}