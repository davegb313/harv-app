{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/harvester-app/front-side/src/components/form-section.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport './form-section.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'change':\n      return { ...state,\n        value: action.value,\n        isValid: action.isValid\n      };\n\n    case 'touch':\n      return { ...state,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Form = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false,\n    isTouched: false\n  });\n  const regex = new RegExp('[a-zA-Z0-9@.]{2,256}\\.[a-z]{2,6}');\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'change',\n      value: event.target.value,\n      isValid: regex.test(event.target.value)\n    });\n    console.log(inputState);\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'touch'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-section\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      sx: {\n        width: 250\n      },\n      label: \"Your website:\",\n      variant: \"standard\",\n      onChange: changeHandler,\n      onBlur: touchHandler,\n      value: inputState.value,\n      error: !inputState.isValid && inputState.isTouched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        height: 40\n      },\n      variant: \"outlined\",\n      children: \"Fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"qT0hzOMBckNy29/JY+j3I+Tt8tk=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/davegb313/code/harvester-app/front-side/src/components/form-section.js"],"names":["React","useReducer","TextField","Button","inputReducer","state","action","type","value","isValid","isTouched","Form","props","inputState","dispatch","regex","RegExp","changeHandler","event","target","test","console","log","touchHandler","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFX;AAGHC,QAAAA,OAAO,EAAEH,MAAM,CAACG;AAHb,OAAP;;AAKJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHK,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAbR;AAeH,CAhBD;;AAkBA,MAAMM,IAAI,GAAGC,KAAK,IAAI;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBb,UAAU,CAACG,YAAD,EAAe;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,KAAtB;AAA6BC,IAAAA,SAAS,EAAE;AAAxC,GAAf,CAAzC;AACA,QAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAW,kCAAX,CAAd;;AAEA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3BJ,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,KAAK,EAAEU,KAAK,CAACC,MAAN,CAAaX,KAAtC;AAA6CC,MAAAA,OAAO,EAAEM,KAAK,CAACK,IAAN,CAAWF,KAAK,CAACC,MAAN,CAAaX,KAAxB;AAAtD,KAAD,CAAR;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACH,GAHD;;AAKA,QAAMU,YAAY,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,EAAE,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OADR;AAEI,MAAA,KAAK,EAAC,eAFV;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,QAAQ,EAAEP,aAJd;AAKI,MAAA,MAAM,EAAEM,YALZ;AAMI,MAAA,KAAK,EAAEV,UAAU,CAACL,KANtB;AAOI,MAAA,KAAK,EAAE,CAACK,UAAU,CAACJ,OAAZ,IAAuBI,UAAU,CAACH;AAP7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAE;AACRe,QAAAA,MAAM,EAAE;AADA,OAAZ;AAEG,MAAA,OAAO,EAAC,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7BD;;GAAMd,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport './form-section.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'change':\n            return {\n                ...state,\n                value: action.value,\n                isValid: action.isValid\n            }\n        case 'touch':\n            return {\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state;\n    }\n};\n\nconst Form = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, { value: '', isValid: false, isTouched: false });\n    const regex = new RegExp('[a-zA-Z0-9@.]{2,256}\\.[a-z]{2,6}');\n\n    const changeHandler = event => {\n        dispatch({ type: 'change', value: event.target.value, isValid: regex.test(event.target.value) });\n        console.log(inputState);\n    };\n\n    const touchHandler = () => {\n        dispatch({ type: 'touch'});\n    };\n\n    return (\n        <div className=\"form-section\">\n            <TextField\n                sx={{ width: 250, }}\n                label=\"Your website:\"\n                variant=\"standard\"\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n                error={!inputState.isValid && inputState.isTouched}\n            />\n            <Button sx={{\n                height: 40,\n            }} variant=\"outlined\">Fetch data</Button>\n        </div>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}