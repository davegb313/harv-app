[{"/Users/davegb313/code/harvester-app/front-side/src/index.js":"1","/Users/davegb313/code/harvester-app/front-side/src/App.js":"2","/Users/davegb313/code/harvester-app/front-side/src/reportWebVitals.js":"3","/Users/davegb313/code/harvester-app/front-side/src/components/navbar.js":"4","/Users/davegb313/code/harvester-app/front-side/src/components/form-section.js":"5","/Users/davegb313/code/harvester-app/front-side/src/components/table.js":"6","/Users/davegb313/code/harvester-app/front-side/src/components/LoadingSpinner.js":"7"},{"size":500,"mtime":1648109030687,"results":"8","hashOfConfig":"9"},{"size":308,"mtime":1648109023680,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1647873673421,"results":"11","hashOfConfig":"9"},{"size":244,"mtime":1647980524069,"results":"12","hashOfConfig":"9"},{"size":3397,"mtime":1648557175475,"results":"13","hashOfConfig":"9"},{"size":3601,"mtime":1648557176774,"results":"14","hashOfConfig":"9"},{"size":290,"mtime":1648557210514,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"otveau",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davegb313/code/harvester-app/front-side/src/index.js",[],[],["40","41"],"/Users/davegb313/code/harvester-app/front-side/src/App.js",[],[],"/Users/davegb313/code/harvester-app/front-side/src/reportWebVitals.js",[],[],"/Users/davegb313/code/harvester-app/front-side/src/components/navbar.js",[],[],"/Users/davegb313/code/harvester-app/front-side/src/components/form-section.js",["42"],[],"import React, { useReducer, useState } from \"react\";\nimport {\n    Card,\n    Button,\n    TextField\n} from \"@mui/material\";\n\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport CustomTable from \"./table\";\nimport './form-section.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'change':\n            return {\n                ...state,\n                value: action.value,\n                isValid: action.isValid\n            }\n        case 'touch':\n            return {\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state;\n    }\n};\n\nconst Form = props => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadedData, setLoadedData] = useState([]);\n    const [inputState, dispatch] = useReducer(inputReducer, { value: '', isValid: false, isTouched: false });\n    const regex = new RegExp('[a-zA-Z0-9@.]{2,256}\\.[a-z]{2,6}');\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'change',\n            value: event.target.value,\n            isValid: regex.test(event.target.value),\n        });\n    };\n\n    const touchHandler = () => {\n        dispatch({ type: 'touch' });\n    };\n\n    const sendReqHandler = async () => {\n        console.log('req sent for:', inputState.value);\n        try {\n            setIsLoading(true);\n            const response = await fetch('http://localhost:5000/getdata', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    domainToCheck: inputState.value\n                })\n            });\n\n            if (!response.ok) {\n                throw new Error(`Error! status: ${response.status}`);\n            }\n\n            const returnedData = await response.json();\n            let arrayOfData = returnedData.returnedData;\n            setIsLoading(false);\n            setLoadedData(arrayOfData);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading && <LoadingSpinner asOverlay />}\n            <div className=\"form-section\">\n                <TextField\n                    sx={{ width: 250, }}\n                    label=\"Your website:\"\n                    variant=\"standard\"\n                    onChange={changeHandler}\n                    onBlur={touchHandler}\n                    value={inputState.value}\n                    error={!inputState.isValid && inputState.isTouched}\n                    helperText={!inputState.isValid && inputState.isTouched && 'incorrect value.'}\n                />\n                <Button\n                    sx={{ height: 40 }}\n                    variant=\"outlined\"\n                    onClick={sendReqHandler}\n                >\n                    Fetch data\n                </Button>\n            </div>\n            <div className=\"results\">\n                <hr />\n                {loadedData.length === 0 ? (\n                    <Card className='no-results-card' variant=\"outlined\">\n                        <p>\n                            Nothing fetched yet, please send a requestüîù\n                        </p>\n                    </Card>\n                ) : (\n                    <CustomTable rows={loadedData} />\n                )}\n            </div>\n        </React.Fragment >\n    )\n}\n\nexport default Form;",["43","44"],"/Users/davegb313/code/harvester-app/front-side/src/components/table.js",[],[],"/Users/davegb313/code/harvester-app/front-side/src/components/LoadingSpinner.js",[],[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":34,"column":51,"nodeType":"51","messageId":"52","endLine":34,"endColumn":52,"suggestions":"53"},{"ruleId":"45","replacedBy":"54"},{"ruleId":"47","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["58","59"],["56"],["57"],"no-global-assign","no-unsafe-negation",{"messageId":"60","fix":"61","desc":"62"},{"messageId":"63","fix":"64","desc":"65"},"removeEscape",{"range":"66","text":"67"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"68","text":"69"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[926,927],"",[926,926],"\\"]